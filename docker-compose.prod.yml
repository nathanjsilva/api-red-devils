version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_red_devils_app
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    networks:
      - api_red_devils_network
    depends_on:
      - mysql
    restart: unless-stopped
    environment:
      - APP_ENV=production

  nginx:
    image: nginx:alpine
    container_name: api_red_devils_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/production.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - api_red_devils_network
    depends_on:
      - app
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: api_red_devils_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - api_red_devils_network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

volumes:
  dbdata:

networks:
  api_red_devils_network:
    driver: bridge

